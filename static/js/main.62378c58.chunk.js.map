{"version":3,"sources":["components/ERC20/ERC20Token.js","components/ERC20/ERC20Create.js","components/ERC20/ERC20MainMenu.js","components/ERC20/ImportMenu/BalanceOf.js","components/ERC20/ImportMenu/Transfer.js","components/ERC20/ImportMenu/TransferFrom.js","components/ERC20/ImportMenu/Approve.js","components/ERC20/ImportMenu/Allowance.js","components/ERC20/ERC20Import.js","components/ERC20/ERC20App.js","components/AppAuthenticated.js","App.js","index.js","utils/ethereumAPI.js"],"names":["module","exports","require","ERC20Token","applyDecimals","web3","web3Token","eth","Contract","abi","ERC20Create","importToken","defaultInitialSupply","useState","tokenName","setTokenName","tokenSymbol","setTokenSymbol","tokenInitialSupply","setTokenInitialSupply","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","onClickAction","a","options","address","getAccounts","accounts","deploy","data","bytecode","arguments","send","from","result","_address","message","Grid","container","spacing","item","xs","Typography","variant","noWrap","component","sx","m","style","color","TextField","label","width","id","placeholder","onChange","e","target","value","type","Alert","severity","Button","onClick","disabled","CircularProgress","size","ERC20MainMenu","onClickCreate","tokenAddress","setTokenAddress","BalanceOf","decimals","tokenData","find","x","name","arg1","setData","onClickBalanceOf","rawBalance","methods","balanceOf","call","adjustedBalance","display","InputLabelProps","shrink","onClose","Transfer","refreshDataGrid","symbol","arg2","onClickTransfer","amountToSend","transfer","disabed","TransferFrom","arg3","onClickTransferFrom","transferFrom","Approve","onClickApprove","amountToApprove","approve","Allowance","onClickAllowance","allowance","ERC20Import","tokenRefresh","setTokenRefresh","setTokenData","useEffect","totalSupply","currentBalance","fetchData","t","height","rows","columns","field","headerName","Box","border","mt","borderRadius","borderColor","Menu","ERC20App","menu","setMenu","Link","href","AppAuthenticated","ERCIndex","ERC","ERC20","allERCs","Object","values","CssBaseline","AppBar","position","ml","Toolbar","flexGrow","p","findIndex","Web3","App","walletConnected","setWalletConnected","instruction","setInstruction","connectWallet","window","ethereum","toast","error","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","newestOnTop","rtl","pauseOnFocusLoss","ReactDOM","render","StrictMode","document","getElementById","Decimal","rawValue","sign","mul","pow","toFixed"],"mappings":"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","file":"static/js/main.62378c58.chunk.js","sourcesContent":["module.exports = require(\"../../solidity/artifacts/src/solidity/contracts/ERC20Token.sol/ERC20Token.json\");","import { useState } from 'react'\r\nimport { Typography, Button, TextField, Grid, CircularProgress, Alert } from '@mui/material'\r\n\r\nconst ERC20Token = require(\"./ERC20Token\");\r\nconst { applyDecimals, web3 } = require('../../utils/ethereumAPI');\r\nconst web3Token = new web3.eth.Contract(ERC20Token.abi);\r\n\r\nconst ERC20Create = ({ importToken }) => {\r\n    const defaultDecimals = \"18\";\r\n    const defaultInitialSupply = \"1000000000000000000\"; // 1\r\n    const [tokenName, setTokenName] = useState(\"\");\r\n    const [tokenSymbol, setTokenSymbol] = useState(\"\");\r\n    const [tokenInitialSupply, setTokenInitialSupply] = useState(defaultInitialSupply);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n    const onClickAction = async () => {\r\n        if(successMessage) {\r\n            importToken(web3Token.options.address);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setErrorMessage(\"\");\r\n        setSuccessMessage(\"\");\r\n\r\n        const accounts = await web3.eth.getAccounts();\r\n        try {\r\n            const result = await web3Token\r\n                            .deploy({\r\n                                data: ERC20Token.bytecode,\r\n                                arguments: [tokenName, tokenSymbol, tokenInitialSupply]\r\n                            })\r\n                            .send({ from: accounts[0] });\r\n\r\n            web3Token.options.address = result._address;\r\n            setSuccessMessage(`Token successfully deployed at: ${result._address}`);\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h6\" noWrap component=\"div\" sx={{ m: 1 }}\r\n                    style={{\r\n                        color: '#fff',\r\n                    }}\r\n                >\r\n                    Create token\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Name\"\r\n                    sx={{ m: 1, width: '25ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    placeholder=\"GOLD\"\r\n                    onChange={(e) => setTokenName(e.target.value)} />\r\n                <TextField\r\n                    label=\"Symbol\"\r\n\r\n                    sx={{ m: 1, width: '25ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    placeholder=\"GLD\"\r\n                    onChange={(e) => setTokenSymbol(e.target.value)} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Initial supply (raw)\"\r\n                    sx={{ m: 1, width: '30ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    placeholder={defaultInitialSupply}\r\n                    type=\"number\"\r\n                    value={tokenInitialSupply}\r\n                    onChange={(e) => setTokenInitialSupply(e.target.value)}\r\n                />\r\n                <TextField\r\n                    label=\"Initial supply (adjusted)\"\r\n                    sx={{ m: 1, width: '30ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    placeholder=\"1\"\r\n                    value={applyDecimals(tokenInitialSupply, defaultDecimals)}\r\n                    variant=\"filled\"\r\n                />\r\n                <TextField\r\n                    label=\"Decimals\"\r\n                    sx={{ m: 1, width: '10ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    value={defaultDecimals}\r\n                    type=\"number\"\r\n                    variant=\"filled\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {successMessage && <Alert severity=\"success\">{successMessage}</Alert>}\r\n                {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ m: 1 }}\r\n                    id=\"css-button\"\r\n\r\n                    onClick={() => onClickAction()}\r\n                    disabled={loading}\r\n                >\r\n                    {successMessage ? \"Token info\" : (loading ? <CircularProgress size={25} /> : \"Create\")}\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ERC20Create\r\n","import { useState } from 'react';\r\nimport { Button, Grid, TextField } from '@mui/material';\r\n\r\nconst ERC20MainMenu = ({ onClickCreate, importToken }) => {\r\n    const [tokenAddress, setTokenAddress] = useState(\"\");\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ m: 1 }}\r\n                    id=\"css-button\"\r\n\r\n                    onClick={() => onClickCreate()}\r\n                >\r\n                    Create token\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Token address\"\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    id=\"css-textfield\"\r\n                    placeholder=\"0x\"\r\n                    size=\"small\"\r\n                    value={tokenAddress}\r\n                    onChange={(e) => setTokenAddress(e.target.value)}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ m: 1 }}\r\n                    id=\"css-button\"\r\n                  \r\n                    onClick={() => importToken(tokenAddress)}\r\n                >\r\n                    Import token\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ERC20MainMenu\r\n","import { useState } from 'react'\r\nimport { Grid, TextField, Button, Alert, Typography } from '@mui/material'\r\n\r\nconst { applyDecimals } = require('../../../utils/ethereumAPI');\r\n\r\nconst BalanceOf = ({ web3Token, tokenData }) => {\r\n    const decimals = tokenData.find(x => x.name === \"Decimals\").value;\r\n    const [data, setData] = useState({ arg1: '', errorMessage: '', result: '' });\r\n\r\n    const onClickBalanceOf = async () => {\r\n        let rawBalance = '';\r\n        try {\r\n            rawBalance= await web3Token.methods.balanceOf(data.arg1).call();\r\n        } catch (error) {\r\n            setData({ ...data, errorMessage: error.message });\r\n            return;\r\n        }\r\n        const adjustedBalance = applyDecimals(rawBalance, decimals);\r\n        setData({ ...data, result: adjustedBalance });\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    id=\"css-button\"\r\n\r\n                    sx={{ m: 1 }}\r\n                    onClick={(e) => onClickBalanceOf()}\r\n                >\r\n                    balanceOf(address owner)\r\n                </Button>\r\n                <Typography variant=\"subtitle1\" noWrap display=\"inline\" component=\"div\" sx={{ m: 1 }}>\r\n                    Result:\r\n                </Typography>\r\n                <TextField\r\n                    sx={{ m: 1, width: '30ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"large\"\r\n                    value={data.result}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    variant=\"standard\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Owner\"\r\n                    id=\"css-textfield\"\r\n\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    size=\"small\"\r\n                    placeholder=\"0x\"\r\n                    onChange={(e) => setData({ arg1: e.target.value, result: '', errorMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {data.errorMessage &&\r\n                    <Alert\r\n                        severity=\"error\"\r\n                        onClose={() => setData({ ...data, errorMessage: \"\" })}>\r\n                        {data.errorMessage}\r\n                    </Alert>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BalanceOf\r\n","import { useState } from 'react'\r\nimport { Grid, TextField, Button, Alert, CircularProgress } from '@mui/material'\r\n\r\nconst { web3, applyDecimals } = require('../../../utils/ethereumAPI');\r\n\r\nconst Transfer = ({ web3Token, tokenData, refreshDataGrid }) => {\r\n    const symbol = tokenData.find(x => x.name === \"Symbol\").value;\r\n    const decimals = tokenData.find(x => x.name === \"Decimals\").value;\r\n\r\n    const [data, setData] = useState({ arg1: '', arg2: '', errorMessage: '', successMessage: '', loading: false});\r\n\r\n    const onClickTransfer = async () => {\r\n\r\n        setData({ ...data, loading: true});\r\n        let errorMessage = \"\";\r\n        let successMessage = \"\";\r\n        \r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            const amountToSend = applyDecimals(data.arg2, decimals, \"positive\");\r\n            await web3Token.methods.transfer(data.arg1, amountToSend)\r\n                                    .send({ from: accounts[0] });\r\n            successMessage = `Transfer successful. ${data.arg2} ${symbol} sent`;\r\n            refreshDataGrid();\r\n        } catch (error) {\r\n            errorMessage = error.message;\r\n        }\r\n\r\n        setData({ ...data, loading: false, errorMessage, successMessage });\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Button \r\n                    variant=\"contained\"\r\n                    id=\"css-button\"\r\n\r\n                    sx={{ m: 1 }}\r\n                    onClick={(e) => onClickTransfer()}\r\n                    disabled={data.loading}\r\n                >\r\n                    {data.loading ? <CircularProgress size={25} /> : \"transfer(address to, uint256 value)\"}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField \r\n                    label=\"To\"\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"0x\"\r\n                    onChange={(e) => setData({ ...data, arg1: e.target.value, errorMessage: '', successMessage: ''})}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled={data.loading}\r\n                />\r\n                <TextField \r\n                    label=\"Value\"\r\n                    sx={{ m: 1, width: '30ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"1\"\r\n                    type=\"number\"\r\n                    onChange={(e) => setData({ ...data, arg2: e.target.value, errorMessage: '', successMessage: ''})}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabed={data.loading}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {data.errorMessage && \r\n                    <Alert \r\n                        severity=\"error\" \r\n                        onClose={() => setData({ ...data, errorMessage: \"\"})}>\r\n                        {data.errorMessage}\r\n                    </Alert>\r\n                }\r\n                {data.successMessage &&\r\n                    <Alert\r\n                        severity=\"success\"\r\n                        onClose={() => setData({ ...data, successMessage: \"\"})}>\r\n                        {data.successMessage}\r\n                    </Alert>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Transfer\r\n","import { useState } from 'react';\r\nimport { Grid, TextField, Button, Alert, CircularProgress } from '@mui/material';\r\n\r\nconst { web3, applyDecimals } = require('../../../utils/ethereumAPI')\r\n\r\nconst TransferFrom = ({ web3Token, refreshDataGrid, tokenData }) => {\r\n    const symbol = tokenData.find(x => x.name === \"Symbol\").value;\r\n    const decimals = tokenData.find(x => x.name === \"Decimals\").value;\r\n\r\n    const [data, setData] = useState({\r\n        arg1: '',\r\n        arg2: '',\r\n        arg3: '',\r\n        errorMessage: '',\r\n        successMessage: '',\r\n        loading: false\r\n    });\r\n\r\n    const onClickTransferFrom = async () => {\r\n\r\n        setData({ ...data, loading: true });\r\n\r\n        let errorMessage = \"\";\r\n        let successMessage = \"\";\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            const amountToSend = applyDecimals(data.arg3, decimals, \"positive\");\r\n            await web3Token.methods.transferFrom(data.arg1, data.arg2, amountToSend).send({ from: accounts[0] });\r\n            successMessage = `Transfer successful. ${data.arg3} ${symbol} sent from ${data.arg1} to ${data.arg2}`;\r\n\r\n            // Refresh the token info to update the wallet balance\r\n            refreshDataGrid();\r\n        } catch (error) {\r\n            errorMessage = error.message;\r\n        }\r\n\r\n        setData({ ...data, loading: false, errorMessage, successMessage });\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    id=\"css-button\"\r\n\r\n                    sx={{ m: 1 }}\r\n                    onClick={(e) => onClickTransferFrom()}\r\n                    disabled={data.loading}\r\n                >\r\n                    {data.loading ? <CircularProgress size={25} /> : \"transferFrom(address from, address to, uint256 value)\"}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"From\"\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"0x0000000000000000000000000000000000000000\"\r\n                    onChange={(e) => setData({ ...data, arg1: e.target.value, errorMessage: '', successMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled={data.loading}\r\n                />\r\n                <TextField\r\n                    label=\"To\"\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"0x0000000000000000000000000000000000000000\"\r\n                    onChange={(e) => setData({ ...data, arg2: e.target.value, errorMessage: '', successMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled={data.loading}\r\n                />\r\n                <TextField\r\n                    label=\"Value\"\r\n                    sx={{ m: 1, width: '30ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"1\"\r\n                    type=\"number\"\r\n                    onChange={(e) => setData({ ...data, arg3: e.target.value, errorMessage: '', successMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled={data.loading}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {data.errorMessage && <Alert severity=\"error\" onClose={() => setData({ ...data, errorMessage: \"\" })}>{data.errorMessage}</Alert>}\r\n                {data.successMessage && <Alert severity=\"success\" onClose={() => setData({ ...data, successMessage: \"\" })}>{data.successMessage}</Alert>}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TransferFrom\r\n","import { useState } from 'react';\r\nimport { Grid, TextField, Button, Alert, CircularProgress } from '@mui/material';\r\n\r\nconst { web3, applyDecimals } = require('../../../utils/ethereumAPI')\r\n\r\nconst Approve = ({ web3Token, refreshDataGrid, tokenData }) => {\r\n    const symbol = tokenData.find(x => x.name === \"Symbol\").value;\r\n    const decimals = tokenData.find(x => x.name === \"Decimals\").value;\r\n\r\n    const [data, setData] = useState({ arg1: '', arg2: '', errorMessage: '', successMessage: '', loading: false });\r\n\r\n    const onClickApprove = async () => {\r\n        setData({ ...data, loading: true });\r\n\r\n        let errorMessage = \"\";\r\n        let successMessage = \"\";\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            const amountToApprove = applyDecimals(data.arg2, decimals, \"positive\");\r\n            await web3Token.methods.approve(data.arg1, amountToApprove).send({ from: accounts[0] });\r\n            successMessage = `Approval successful. ${data.arg2} ${symbol} approved to ${data.arg1}`;\r\n\r\n            // Refresh the token info to update the wallet balance\r\n            refreshDataGrid();\r\n        } catch (error) {\r\n            errorMessage = error.message;\r\n        }\r\n        \r\n        setData({ ...data, loading: false, errorMessage, successMessage });\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ m: 1 }}\r\n                    id=\"css-button\"\r\n\r\n                    onClick={(e) => onClickApprove()}\r\n                    disabled={data.loading}\r\n                >\r\n                    {data.loading ? <CircularProgress size={25} /> : \"approve(address spender, uint256 value)\"}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Spender\"\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"0x0000000000000000000000000000000000000000\"\r\n                    onChange={(e) => setData({ ...data, arg1: e.target.value, errorMessage: '', successMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled={data.loading}\r\n                />\r\n                <TextField\r\n                    label=\"Value\"\r\n                    sx={{ m: 1, width: '30ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"1\"\r\n                    type=\"number\"\r\n                    onChange={(e) => setData({ ...data, arg2: e.target.value, errorMessage: '', successMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled={data.loading}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {data.errorMessage && <Alert severity=\"error\" onClose={() => setData({ ...data, errorMessage: \"\" })}>{data.errorMessage}</Alert>}\r\n                {data.successMessage && <Alert severity=\"success\" onClose={() => setData({ ...data, successMessage: \"\" })}>{data.successMessage}</Alert>}\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default Approve\r\n","import { useState } from 'react';\r\nimport { Grid, TextField, Button, Alert, Typography } from '@mui/material';\r\n\r\nconst { applyDecimals } = require('../../../utils/ethereumAPI')\r\n\r\nconst Allowance = ({ web3Token, tokenData }) => {\r\n    const decimals = tokenData.find(x => x.name === \"Decimals\").value;\r\n    const [data, setData] = useState({ arg1: '', arg2: '', errorMessage: '', loading: false });\r\n\r\n    const onClickAllowance = async () => {\r\n        let rawBalance = '';\r\n        try {\r\n            rawBalance = await web3Token.methods.allowance(data.arg1, data.arg2).call();\r\n        } catch (error) {\r\n            setData({ ...data, errorMessage: error.message });\r\n            return;\r\n        }\r\n        const adjustedBalance = applyDecimals(rawBalance, decimals);\r\n        setData({ ...data, result: adjustedBalance });\r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{ m: 1 }}\r\n                    onClick={(e) => onClickAllowance()}\r\n                    id=\"css-button\"\r\n\r\n                    disabled={data.loading}\r\n                >\r\n                    allowance(address owner, address spender)\r\n                </Button>\r\n                <Typography variant=\"subtitle1\" noWrap display=\"inline\" component=\"div\" sx={{ m: 1 }}>\r\n                    Result:\r\n                </Typography>\r\n                <TextField\r\n                    sx={{ m: 1, width: '30ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"large\"\r\n                    value={data.result}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    variant=\"standard\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField\r\n                    label=\"Owner\"\r\n                    id=\"css-textfield\"\r\n\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    size=\"small\"\r\n                    placeholder=\"0x0000000000000000000000000000000000000000\"\r\n                    onChange={(e) => setData({ ...data, arg1: e.target.value, errorMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                />\r\n                <TextField\r\n                    label=\"Spender\"\r\n                    sx={{ m: 1, width: '50ch' }}\r\n                    id=\"css-textfield\"\r\n\r\n                    size=\"small\"\r\n                    placeholder=\"0x0000000000000000000000000000000000000000\"\r\n                    onChange={(e) => setData({ ...data, arg2: e.target.value, errorMessage: '' })}\r\n                    InputLabelProps={{ shrink: true }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {data.errorMessage && <Alert severity=\"error\" onClose={() => setData({ ...data, errorMessage: \"\" })}>{data.errorMessage}</Alert>}\r\n            </Grid>\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default Allowance\r\n","import { useState, useEffect } from 'react'\r\nimport { Grid, Typography, Box } from '@mui/material'\r\nimport { DataGrid } from '@mui/x-data-grid'\r\nimport BalanceOf from './ImportMenu/BalanceOf';\r\nimport Transfer from './ImportMenu/Transfer';\r\nimport TransferFrom from './ImportMenu/TransferFrom';\r\nimport Approve from './ImportMenu/Approve';\r\nimport Allowance from './ImportMenu/Allowance';\r\n\r\nconst ERC20Token = require(\"./ERC20Token\");\r\nconst { web3, applyDecimals } = require(\"../../utils/ethereumAPI\");\r\n\r\nconst ERC20Import = ({ tokenAddress }) => {\r\n    const web3Token = new web3.eth.Contract(ERC20Token.abi, tokenAddress);\r\n    const [tokenRefresh, setTokenRefresh] = useState(0);\r\n    const [tokenData, setTokenData] = useState([\r\n        { id: 0, name: 'Address', value: tokenAddress },\r\n        { id: 1, name: 'Name', value: '' },\r\n        { id: 2, name: 'Symbol', value: '' },\r\n        { id: 3, name: 'TotalSupply', value: '' },\r\n        { id: 4, name: 'Decimals', value: '' },\r\n        { id: 5, name: 'Current balance', value: '' }\r\n    ]);\r\n\r\n    const columns = [\r\n        { field: 'name', headerName: 'Token', width: 150 },\r\n        { field: 'value', headerName: 'Value', width: 500 }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const web3Token = new web3.eth.Contract(ERC20Token.abi, tokenAddress);\r\n            const name = await web3Token.methods.name().call();\r\n            const symbol = await web3Token.methods.symbol().call();\r\n            const totalSupply = await web3Token.methods.totalSupply().call();\r\n            const decimals = await web3Token.methods.decimals().call();\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n            const currentBalance = await web3Token.methods.balanceOf(accounts[0]).call();\r\n            \r\n            setTokenData(tokenData => [\r\n                tokenData[0],\r\n                { ...tokenData[1], value: name },\r\n                { ...tokenData[2], value: symbol },\r\n                { ...tokenData[3], value: applyDecimals(totalSupply, decimals) },\r\n                { ...tokenData[4], value: decimals },\r\n                { ...tokenData[5], value: applyDecimals(currentBalance, decimals) }\r\n            ]);\r\n        }\r\n        fetchData();\r\n    }, [tokenAddress, tokenRefresh]);\r\n\r\n    const refreshDataGrid = () => setTokenRefresh(t => ++t);\r\n\r\n    return (\r\n        <div>\r\n            <Grid style={{color:\"red\"}} container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{ m: 1 }}>\r\n                        Token info\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ height: '450px' }}>\r\n                    <DataGrid style={{color:\"white\"}}  rows={tokenData} columns={columns} />\r\n                </Grid>\r\n            </Grid>\r\n            <Box  border={1} sx={{ mt: 2, borderRadius: 1, borderColor: \"LightGray\" }}>\r\n                <BalanceOf  web3Token={web3Token} tokenData={tokenData} />\r\n            </Box>\r\n            <Box border={1} sx={{ mt: 2, borderRadius: 1, borderColor: \"LightGray\" }}>\r\n                <Allowance web3Token={web3Token} tokenData={tokenData} />\r\n            </Box>\r\n            <Box border={1} sx={{ mt: 2, borderRadius: 1,color:\"white\", borderColor: \"LightGray\" }}>\r\n                <Transfer web3Token={web3Token} tokenData={tokenData} refreshDataGrid={refreshDataGrid}/>\r\n            </Box>\r\n            <Box border={1} sx={{ mt: 2, borderRadius: 1, borderColor: \"LightGray\" }}>\r\n                <TransferFrom web3Token={web3Token} refreshDataGrid={refreshDataGrid} tokenData={tokenData} />\r\n            </Box>\r\n            <Box border={1} sx={{ mt: 2, borderRadius: 1, borderColor: \"LightGray\" }}>\r\n                <Approve web3Token={web3Token} refreshDataGrid={refreshDataGrid} tokenData={tokenData} />\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ERC20Import\r\n","import { useState } from 'react'\r\nimport { Link, Box } from '@mui/material'\r\nimport ERC20Create from './ERC20Create'\r\nimport ERC20MainMenu from './ERC20MainMenu'\r\nimport ERC20Import from './ERC20Import'\r\n\r\nconst Menu = {\r\n    Main: 0,\r\n    Create: 1,\r\n    Import: 2\r\n}\r\n\r\nconst ERC20App = () => {\r\n    const [menu, setMenu] = useState(Menu.Main);\r\n    const [tokenAddress, setTokenAddress] = useState(\"\");\r\n\r\n    const onClickCreate = () => setMenu(Menu.Create);\r\n    const importToken = (address) => {\r\n        setTokenAddress(address);\r\n        setMenu(Menu.Import);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {menu !== Menu.Main &&\r\n                <Box sx={{ height: \"5ch\" }}>\r\n                    <Link id=\"LINK\" href=\"#\" onClick={() => setMenu(Menu.Main)} sx={{ m: 1 }}>\r\n                        Back\r\n                    </Link>\r\n                </Box>\r\n            }\r\n            {menu === Menu.Main && <ERC20MainMenu onClickCreate={onClickCreate} importToken={importToken} />}\r\n            {menu === Menu.Create && <ERC20Create importToken={importToken} />}\r\n            {menu === Menu.Import && <ERC20Import tokenAddress={tokenAddress} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ERC20App\r\n","import { useState } from 'react';\r\nimport ERC20App from './ERC20/ERC20App';\r\nimport { CssBaseline, Divider, Drawer, List, ListItemButton,\r\n    ListItemText, Typography, AppBar, Toolbar, Box } from '@mui/material';\r\n\r\nconst AppAuthenticated = () => {\r\n    const [ERCIndex, setERCIndex] = useState(0);\r\n    const ERC = {\r\n        ERC20: \"ERC-20\",\r\n\r\n        //ERCs below are not yet implemented\r\n        //ERC721: \"ERC-721\",\r\n        //ERC777: \"ERC-777\",\r\n        //ERC1155: \"ERC-1155\"\r\n    }\r\n    const allERCs = Object.values(ERC);\r\n    const drawerWidth = 240;\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                id=\"AppBarID\"\r\n                \r\n                sx={{ width: `calc(100% - ${drawerWidth}px)`, ml: `${drawerWidth}px` }}>\r\n                <Toolbar>\r\n                    <Typography  variant=\"h6\" noWrap component=\"div\">\r\n                        Ethereum ERC Token\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/* <Drawer\r\n                sx={{\r\n                    width: drawerWidth,\r\n                    flexShrink: 0,\r\n                    '& .MuiDrawer-paper': {\r\n                        width: drawerWidth,\r\n                        boxSizing: 'border-box'\r\n                    }\r\n                }}\r\n                variant=\"permanent\"\r\n                anchor=\"left\">\r\n                <Toolbar />\r\n                <Divider />\r\n                <List>\r\n                    {allERCs.map((erc, index) => {\r\n                        return (<ListItemButton\r\n                            key={index}\r\n                            selected={index === ERCIndex}\r\n                            onClick={() => setERCIndex(index)}\r\n                        >\r\n                            <ListItemText primary={erc} />\r\n                        </ListItemButton>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </Drawer> */}\r\n            <Box\r\n                component=\"main\"\r\n                sx={{ flexGrow: 1, p:3 }}>\r\n                    <Toolbar />\r\n                {ERCIndex === allERCs.findIndex((x) => x === ERC.ERC20) && <ERC20App />}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AppAuthenticated\r\n","import { useState, useEffect } from 'react'\r\nimport AppAuthenticated from \"./components/AppAuthenticated\"\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Web3 = require(\"web3\");\r\n\r\nconst App = () => {\r\n  const [walletConnected, setWalletConnected] = useState(false);\r\n  const [instruction, setInstruction] = useState(\"Waiting for connection with wallet...\");\r\n\r\n  useEffect(() => {\r\n   \r\n    const connectWallet = async () => {\r\n      if(!window.ethereum)\r\n        return;\r\n\r\n      try {\r\n        await window.ethereum.send('eth_requestAccounts');\r\n        window.web3 = new Web3(window.ethereum);\r\n      } catch (error) {\r\n        setInstruction(\"Wallet connection denied, reload the page to try again.\");\r\n        return;\r\n      }\r\n      setInstruction(\"\");\r\n      setWalletConnected(true);\r\n    };\r\n    connectWallet();\r\n  }, []);\r\n  toast.error('\"Metamask or other EIP-1102 / EIP-1193 compliant wallet not found.\"', {\r\n    position: \"bottom-left\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });\r\n  return (\r\n\r\n  \r\n    <div>\r\n     \r\n\r\n      {window.ethereum ?\r\n        (walletConnected ?\r\n          <AppAuthenticated/>\r\n          : instruction)\r\n        : <ToastContainer\r\n        position=\"bottom-left\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","const Web3 = require(\"web3\");\r\nconst web3 = new Web3(window.ethereum);\r\n\r\nconst Decimal = require('decimal.js');\r\nconst applyDecimals = (rawValue, decimals, sign = \"negative\") => {\r\n    if(!rawValue)\r\n        return \"\";\r\n    \r\n    return Decimal(rawValue).mul(Decimal(10).pow(Decimal(sign === \"positive\" ? decimals : -decimals))).toFixed();\r\n}\r\n\r\nmodule.exports = {\r\n    applyDecimals,\r\n    web3\r\n}"],"sourceRoot":""}